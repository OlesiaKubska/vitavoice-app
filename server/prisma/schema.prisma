// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  name             String
  email            String    @unique
  password         String
  avatar           String?
  role             String    @default("user") // roles: user, admin
  isActive         Boolean   @default(true)
  isEmailVerified  Boolean   @default(false)
  lastLogin        DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt @default(now())

  registrations    Registration[]
  subscriptions    Subscription[]
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        DateTime
  location    String
  price       Float
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  registrations Registration[]
}

model Registration {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   Int
  paid      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Subscription {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  startDate DateTime
  endDate   DateTime
  isActive  Boolean  @default(true)
}